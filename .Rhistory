a <- available.packages()
head(rownames(a,3))
install.packages("KernSmooth")
library(KernSmooth)
swirl
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list
)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
setwd("~/Documents/Coursera/R Programming (Johns Hopkins)/ProgrammingAssignment2/ProgrammingAssignment2")
?solve
load("cachematrix.R"")
load("cachematrix.R")
load("cachematrix.R")
getwd()
list.files()
source("cachematrix.R")
makeCacheMatrix(matrix(1:4,2,2))
?matrix
x<-matrix(1:4,nrow=2,ncol=2)
x
makeCacheMatrix(x)
source("cachematrix.R")
cacheSolve(x)
tm<-matrix(1:4,nrow=2,ncol=2)
tm
clear(x)
remove(x)
x
source("cachematrix.R")
cacheSolve(x)
cacheSolve(tm)
source("cmean.R")
cachemean(c(1,2,3,4,5))
cachemean(1,2,3,4,5)
cachemean()
cachemean(x)
vec <- numeric(1,2,3,4)
vec <- numeric(1)
vec
vec <- numeric(10)
vec
cachemean(vec)
vec[2] <- 4
vec
makeVector(vec)
tvec <- makeVector(vec)
cachemean(tvec)
remove(tvec, vec)
remove("cmean.R")
remove(cachemean())
View(cachemean)
cacheSolve(tm)
makeCacheMatrix(tm)
cacheSolve(makeCacheMatrix(tm))
intm <- cacheSolve(makeCacheMatrix(tm))
intm %*% tm
tm <- matrix(1:36, nrow = 6, ncol = 6)
intm <- cacheSolve(makeCacheMatrix(tm))
tm
solve(tm)
tm <- matrix(4:40,nrow = 6, ncol=6)
tm <- matrix(5:40,nrow = 6, ncol=6)
tm
solve(tm)
tm[3,3] <- 42
tm
solve(tm)
tm[3,4] <- 422
solve(tm)
tm[1,1] <- 422
tm[2,2] <- 14
tm[4,4] <- 39
solve(tm)
intm <- cacheSolve(makeCacheMatrix(tm))
intm %*% tm
solve(tm)%*%tm
tm <- matrix(sample(1:40, 25), nrow = 5, ncol = 5)
intm <- cacheSolve(makeCacheMatrix(tm))
solve(tm)%*%tm
intm %*% tm
tm <- matrix(sample(1:40, 24), nrow = 4, ncol = 6)
intm <- cacheSolve(makeCacheMatrix(tm))
source("cachematrix.R")
tm <- matrix(sample(1:40, 125), nrow = 25, ncol = 25)
tm <- matrix(sample(1:40, 125, replace=T), nrow = 25, ncol = 25)
intm <- cacheSolve(makeCacheMatrix(tm))
tm <- matrix(sample(1:40, 125, replace=T), nrow = 25, ncol = 25)
intm <- cacheSolve(makeCacheMatrix(tm))
tm <- matrix(sample(1:400, 125), nrow = 25, ncol = 25)
intm <- cacheSolve(makeCacheMatrix(tm))
tm <- matrix(sample(1:400, 125), nrow = 25, ncol = 25)
intm <- cacheSolve(makeCacheMatrix(tm))
tm <- matrix(sample(1:400, 125, replace=F), nrow = 25, ncol = 25)
intm <- cacheSolve(makeCacheMatrix(tm))
tm <- matrix(sample(1:400, 100, replace=F), nrow = 10, ncol = 10)
intm <- cacheSolve(makeCacheMatrix(tm))
intm %*% tm
